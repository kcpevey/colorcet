name: pytest
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '*'

jobs:
  test_suite:
    name: Pytest on ${{ matrix.python-version }}, ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        python-version: [2.7, 3.5]  # 3.6 and 3.7 works already
        # exclude:
        #   - os: windows-latest
        #     python-version: 2.7
        #   - os: macos-latest
        #     python-version: 3.7
    timeout-minutes: 60
    defaults:
      run:
        shell: bash -l {0} 
    env:
      HV_REQUIREMENTS: "examples"
      PYTHON_VERSION: ${{ matrix.python-version }}
      CHANS_DEV: "-c pyviz/label/dev"
      # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      ENV_NAME: "colorcet"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "100"
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
      - name: conda setup
        run: |
          conda config --set always_yes True
          conda install -c pyviz "pyctdev>=0.5"
          doit ecosystem_setup
          doit env_create --name=${{ env.ENV_NAME }} --python=${{ matrix.python-version }}
          conda --version
      - name: doit develop_install
        run: |
          eval "$(conda shell.bash hook)"
          conda activate ${{ env.ENV_NAME }}
          conda --version
          doit develop_install ${{ env.CHANS_DEV}} -o ${{ env.HV_REQUIREMENTS }}
          conda list
      - name: doit env_capture
        run: |
          eval "$(conda shell.bash hook)"
          conda activate ${{ env.ENV_NAME }}
          doit env_capture
      - name: conda list
        run: |
          eval "$(conda shell.bash hook)"
          conda activate ${{ env.ENV_NAME }}
          conda list
      - name: doit test_all
        run: |
          eval "$(conda shell.bash hook)"
          conda activate ${{ env.ENV_NAME }}
          doit test_all
      - name: doit test_unit_extra
        run: |
          eval "$(conda shell.bash hook)"
          conda activate ${{ env.ENV_NAME }}
          doit test_unit_extra
      - name: mpl
        run: |
          eval "$(conda shell.bash hook)"
          conda activate ${{ env.ENV_NAME }}
          pip install pytest-mpl
          pytest --mpl-generate-path=baseline
          pytest --mpl